package com.scaler.academy.pointer2;

public class PairsGivenSum {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		//int A[] = {};

		int A[] = {2, 2, 3, 4, 4, 5, 6, 7, 10};//{1, 2, 6, 6, 7, 9, 9};//{1, 1, 1};
		int B= 8;
		PairsGivenSum pair= new PairsGivenSum();
		int solve = pair.solve(A, B);
		System.out.println(solve);
	}
	
	public int solve(int[] A, int B) { 
		int i=0;
		int j=A.length-1;
		int mod=1000000007;
		
		int count=0;
		while(i<j) {
			
			int sum=A[i]+A[j];
			if(sum>B) {
				j--;
			} else if(sum<B) {
				i++;
			} else {
				if(A[i]==A[j]) {
					int x= j-i+1;
					count+=(x*(x-1)/2)%mod;
					
					break;
				} else {
					int a=1;
					int b=1;
					while(A[i]==A[i+1]) {
						a++;
						i++;
					} 
					while(A[j]==A[j-1]) {
						b++;
						j--;
					}
					//i+=a;j-=b;
					count+=(a*b)%mod;
					i++;
					j--;
					
				}
			}
				
		}
		return count;
		
	}

}
